# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

### ##########################################################################
### PUNC = < Portable Understructure for Numerical Computing >
### Copyright (C) 1994-- Michael Holst
### 
### This library is free software; you can redistribute it and/or
### modify it under the terms of the GNU Lesser General Public
### License as published by the Free Software Foundation; either
### version 2.1 of the License, or (at your option) any later version.
### 
### This library is distributed in the hope that it will be useful,
### but WITHOUT ANY WARRANTY; without even the implied warranty of
### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
### Lesser General Public License for more details.
### 
### You should have received a copy of the GNU Lesser General Public
### License along with this library; if not, write to the Free Software
### Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
### 
### rcsid="$Id: Makefile.in,v 1.15 2010/12/09 20:43:33 fetk Exp $"
### ##########################################################################

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = src/umfpack
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/aaa_inc/punccf.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libumfpack_la_LIBADD =
am__objects_1 = umfpack_gn_global.lo umfpack_gn_timer.lo \
	umfpack_gn_tictoc.lo
am__objects_2 = umf_i_analyze.lo umf_i_apply_order.lo umf_i_colamd.lo \
	umf_i_free.lo umf_i_fsize.lo umf_i_is_permutation.lo \
	umf_i_malloc.lo umf_i_realloc.lo umf_i_report_perm.lo \
	umf_i_singletons.lo umf_di_lhsolve.lo umf_di_uhsolve.lo \
	umf_di_triplet_map_nox.lo umf_di_triplet_nomap_x.lo \
	umf_di_triplet_nomap_nox.lo umf_di_triplet_map_x.lo \
	umf_di_assemble_fixq.lo umf_di_store_lu_drop.lo \
	umf_di_assemble.lo umf_di_blas3_update.lo \
	umf_di_build_tuples.lo umf_di_create_element.lo umf_di_dump.lo \
	umf_di_extend_front.lo umf_di_garbage_collection.lo \
	umf_di_get_memory.lo umf_di_init_front.lo umf_di_kernel.lo \
	umf_di_kernel_init.lo umf_di_kernel_wrapup.lo \
	umf_di_local_search.lo umf_di_lsolve.lo umf_di_ltsolve.lo \
	umf_di_mem_alloc_element.lo umf_di_mem_alloc_head_block.lo \
	umf_di_mem_alloc_tail_block.lo umf_di_mem_free_tail_block.lo \
	umf_di_mem_init_memoryspace.lo umf_di_report_vector.lo \
	umf_di_row_search.lo umf_di_scale_column.lo \
	umf_di_set_stats.lo umf_di_solve.lo umf_di_symbolic_usage.lo \
	umf_di_transpose.lo umf_di_tuple_lengths.lo umf_di_usolve.lo \
	umf_di_utsolve.lo umf_di_valid_numeric.lo \
	umf_di_valid_symbolic.lo umf_di_grow_front.lo \
	umf_di_start_front.lo umf_di_2by2.lo umf_di_store_lu.lo \
	umf_di_scale.lo umfpack_di_wsolve.lo \
	umfpack_di_col_to_triplet.lo umfpack_di_defaults.lo \
	umfpack_di_free_numeric.lo umfpack_di_free_symbolic.lo \
	umfpack_di_get_numeric.lo umfpack_di_get_lunz.lo \
	umfpack_di_get_symbolic.lo umfpack_di_get_determinant.lo \
	umfpack_di_numeric.lo umfpack_di_qsymbolic.lo \
	umfpack_di_report_control.lo umfpack_di_report_info.lo \
	umfpack_di_report_matrix.lo umfpack_di_report_numeric.lo \
	umfpack_di_report_perm.lo umfpack_di_report_status.lo \
	umfpack_di_report_symbolic.lo umfpack_di_report_triplet.lo \
	umfpack_di_report_vector.lo umfpack_di_solve.lo \
	umfpack_di_symbolic.lo umfpack_di_transpose.lo \
	umfpack_di_triplet_to_col.lo umfpack_di_scale.lo \
	umfpack_di_load_numeric.lo umfpack_di_save_numeric.lo \
	umfpack_di_load_symbolic.lo umfpack_di_save_symbolic.lo
am__objects_3 = umf_zi_lhsolve.lo umf_zi_uhsolve.lo \
	umf_zi_triplet_map_nox.lo umf_zi_triplet_nomap_x.lo \
	umf_zi_triplet_nomap_nox.lo umf_zi_triplet_map_x.lo \
	umf_zi_assemble_fixq.lo umf_zi_store_lu_drop.lo \
	umf_zi_assemble.lo umf_zi_blas3_update.lo \
	umf_zi_build_tuples.lo umf_zi_create_element.lo umf_zi_dump.lo \
	umf_zi_extend_front.lo umf_zi_garbage_collection.lo \
	umf_zi_get_memory.lo umf_zi_init_front.lo umf_zi_kernel.lo \
	umf_zi_kernel_init.lo umf_zi_kernel_wrapup.lo \
	umf_zi_local_search.lo umf_zi_lsolve.lo umf_zi_ltsolve.lo \
	umf_zi_mem_alloc_element.lo umf_zi_mem_alloc_head_block.lo \
	umf_zi_mem_alloc_tail_block.lo umf_zi_mem_free_tail_block.lo \
	umf_zi_mem_init_memoryspace.lo umf_zi_report_vector.lo \
	umf_zi_row_search.lo umf_zi_scale_column.lo \
	umf_zi_set_stats.lo umf_zi_solve.lo umf_zi_symbolic_usage.lo \
	umf_zi_transpose.lo umf_zi_tuple_lengths.lo umf_zi_usolve.lo \
	umf_zi_utsolve.lo umf_zi_valid_numeric.lo \
	umf_zi_valid_symbolic.lo umf_zi_grow_front.lo \
	umf_zi_start_front.lo umf_zi_2by2.lo umf_zi_store_lu.lo \
	umf_zi_scale.lo umfpack_zi_wsolve.lo \
	umfpack_zi_col_to_triplet.lo umfpack_zi_defaults.lo \
	umfpack_zi_free_numeric.lo umfpack_zi_free_symbolic.lo \
	umfpack_zi_get_numeric.lo umfpack_zi_get_lunz.lo \
	umfpack_zi_get_symbolic.lo umfpack_zi_get_determinant.lo \
	umfpack_zi_numeric.lo umfpack_zi_qsymbolic.lo \
	umfpack_zi_report_control.lo umfpack_zi_report_info.lo \
	umfpack_zi_report_matrix.lo umfpack_zi_report_numeric.lo \
	umfpack_zi_report_perm.lo umfpack_zi_report_status.lo \
	umfpack_zi_report_symbolic.lo umfpack_zi_report_triplet.lo \
	umfpack_zi_report_vector.lo umfpack_zi_solve.lo \
	umfpack_zi_symbolic.lo umfpack_zi_transpose.lo \
	umfpack_zi_triplet_to_col.lo umfpack_zi_scale.lo \
	umfpack_zi_load_numeric.lo umfpack_zi_save_numeric.lo \
	umfpack_zi_load_symbolic.lo umfpack_zi_save_symbolic.lo
am__objects_4 = umf_l_analyze.lo umf_l_apply_order.lo umf_l_colamd.lo \
	umf_l_free.lo umf_l_fsize.lo umf_l_is_permutation.lo \
	umf_l_malloc.lo umf_l_realloc.lo umf_l_report_perm.lo \
	umf_l_singletons.lo umf_dl_lhsolve.lo umf_dl_uhsolve.lo \
	umf_dl_triplet_map_nox.lo umf_dl_triplet_nomap_x.lo \
	umf_dl_triplet_nomap_nox.lo umf_dl_triplet_map_x.lo \
	umf_dl_assemble_fixq.lo umf_dl_store_lu_drop.lo \
	umf_dl_assemble.lo umf_dl_blas3_update.lo \
	umf_dl_build_tuples.lo umf_dl_create_element.lo umf_dl_dump.lo \
	umf_dl_extend_front.lo umf_dl_garbage_collection.lo \
	umf_dl_get_memory.lo umf_dl_init_front.lo umf_dl_kernel.lo \
	umf_dl_kernel_init.lo umf_dl_kernel_wrapup.lo \
	umf_dl_local_search.lo umf_dl_lsolve.lo umf_dl_ltsolve.lo \
	umf_dl_mem_alloc_element.lo umf_dl_mem_alloc_head_block.lo \
	umf_dl_mem_alloc_tail_block.lo umf_dl_mem_free_tail_block.lo \
	umf_dl_mem_init_memoryspace.lo umf_dl_report_vector.lo \
	umf_dl_row_search.lo umf_dl_scale_column.lo \
	umf_dl_set_stats.lo umf_dl_solve.lo umf_dl_symbolic_usage.lo \
	umf_dl_transpose.lo umf_dl_tuple_lengths.lo umf_dl_usolve.lo \
	umf_dl_utsolve.lo umf_dl_valid_numeric.lo \
	umf_dl_valid_symbolic.lo umf_dl_grow_front.lo \
	umf_dl_start_front.lo umf_dl_2by2.lo umf_dl_store_lu.lo \
	umf_dl_scale.lo umfpack_dl_wsolve.lo \
	umfpack_dl_col_to_triplet.lo umfpack_dl_defaults.lo \
	umfpack_dl_free_numeric.lo umfpack_dl_free_symbolic.lo \
	umfpack_dl_get_numeric.lo umfpack_dl_get_lunz.lo \
	umfpack_dl_get_symbolic.lo umfpack_dl_get_determinant.lo \
	umfpack_dl_numeric.lo umfpack_dl_qsymbolic.lo \
	umfpack_dl_report_control.lo umfpack_dl_report_info.lo \
	umfpack_dl_report_matrix.lo umfpack_dl_report_numeric.lo \
	umfpack_dl_report_perm.lo umfpack_dl_report_status.lo \
	umfpack_dl_report_symbolic.lo umfpack_dl_report_triplet.lo \
	umfpack_dl_report_vector.lo umfpack_dl_solve.lo \
	umfpack_dl_symbolic.lo umfpack_dl_transpose.lo \
	umfpack_dl_triplet_to_col.lo umfpack_dl_scale.lo \
	umfpack_dl_load_numeric.lo umfpack_dl_save_numeric.lo \
	umfpack_dl_load_symbolic.lo umfpack_dl_save_symbolic.lo
am__objects_5 = umf_zl_lhsolve.lo umf_zl_uhsolve.lo \
	umf_zl_triplet_map_nox.lo umf_zl_triplet_nomap_x.lo \
	umf_zl_triplet_nomap_nox.lo umf_zl_triplet_map_x.lo \
	umf_zl_assemble_fixq.lo umf_zl_store_lu_drop.lo \
	umf_zl_assemble.lo umf_zl_blas3_update.lo \
	umf_zl_build_tuples.lo umf_zl_create_element.lo umf_zl_dump.lo \
	umf_zl_extend_front.lo umf_zl_garbage_collection.lo \
	umf_zl_get_memory.lo umf_zl_init_front.lo umf_zl_kernel.lo \
	umf_zl_kernel_init.lo umf_zl_kernel_wrapup.lo \
	umf_zl_local_search.lo umf_zl_lsolve.lo umf_zl_ltsolve.lo \
	umf_zl_mem_alloc_element.lo umf_zl_mem_alloc_head_block.lo \
	umf_zl_mem_alloc_tail_block.lo umf_zl_mem_free_tail_block.lo \
	umf_zl_mem_init_memoryspace.lo umf_zl_report_vector.lo \
	umf_zl_row_search.lo umf_zl_scale_column.lo \
	umf_zl_set_stats.lo umf_zl_solve.lo umf_zl_symbolic_usage.lo \
	umf_zl_transpose.lo umf_zl_tuple_lengths.lo umf_zl_usolve.lo \
	umf_zl_utsolve.lo umf_zl_valid_numeric.lo \
	umf_zl_valid_symbolic.lo umf_zl_grow_front.lo \
	umf_zl_start_front.lo umf_zl_2by2.lo umf_zl_store_lu.lo \
	umf_zl_scale.lo umfpack_zl_wsolve.lo \
	umfpack_zl_col_to_triplet.lo umfpack_zl_defaults.lo \
	umfpack_zl_free_numeric.lo umfpack_zl_free_symbolic.lo \
	umfpack_zl_get_numeric.lo umfpack_zl_get_lunz.lo \
	umfpack_zl_get_symbolic.lo umfpack_zl_get_determinant.lo \
	umfpack_zl_numeric.lo umfpack_zl_qsymbolic.lo \
	umfpack_zl_report_control.lo umfpack_zl_report_info.lo \
	umfpack_zl_report_matrix.lo umfpack_zl_report_numeric.lo \
	umfpack_zl_report_perm.lo umfpack_zl_report_status.lo \
	umfpack_zl_report_symbolic.lo umfpack_zl_report_triplet.lo \
	umfpack_zl_report_vector.lo umfpack_zl_solve.lo \
	umfpack_zl_symbolic.lo umfpack_zl_transpose.lo \
	umfpack_zl_triplet_to_col.lo umfpack_zl_scale.lo \
	umfpack_zl_load_numeric.lo umfpack_zl_save_numeric.lo \
	umfpack_zl_load_symbolic.lo umfpack_zl_save_symbolic.lo
am_libumfpack_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5)
libumfpack_la_OBJECTS = $(am_libumfpack_la_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src/aaa_inc
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libumfpack_la_SOURCES)
DIST_SOURCES = $(libumfpack_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FETK_VERSION = @FETK_VERSION@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MAKE_DOC = @MAKE_DOC@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
amd = @amd@
amd_lib = @amd_lib@
arpack = @arpack@
arpack_lib = @arpack_lib@
bindir = @bindir@
blas = @blas@
blas_lib = @blas_lib@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
cgcode = @cgcode@
cgcode_lib = @cgcode_lib@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dot_path = @dot_path@
doxygen_path = @doxygen_path@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
fetk_cpu_vendor_os = @fetk_cpu_vendor_os@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
lapack = @lapack@
lapack_lib = @lapack_lib@
libdir = @libdir@
liberty_lib = @liberty_lib@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
maloc_inc = @maloc_inc@
maloc_lib = @maloc_lib@
mandir = @mandir@
math_lib = @math_lib@
mkdir_p = @mkdir_p@
mpi_lib = @mpi_lib@
nsl_lib = @nsl_lib@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pedantic_ansi = @pedantic_ansi@
pmg = @pmg@
pmg_lib = @pmg_lib@
prefix = @prefix@
profile = @profile@
profile_lib = @profile_lib@
program_transform_name = @program_transform_name@
psdir = @psdir@
rl_lib = @rl_lib@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
socket_lib = @socket_lib@
srcdir = @srcdir@
superlu = @superlu@
superlu_lib = @superlu_lib@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
thread_lib = @thread_lib@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
umfpack = @umfpack@
umfpack_lib = @umfpack_lib@
vf2c = @vf2c@
vf2c_lib = @vf2c_lib@
wall = @wall@
wall_pedantic = @wall_pedantic@
wall_pedantic_ansi = @wall_pedantic_ansi@
zfence = @zfence@
zfence_lib = @zfence_lib@
CPPINC = -I@srcdir@ -I@srcdir@/punc \
         -I${top_srcdir}/src/amd -I${top_srcdir}/src/amd/punc

UMF_GN = umfpack_gn_global.c umfpack_gn_timer.c umfpack_gn_tictoc.c
UMF_I = umf_i_analyze.c umf_i_apply_order.c umf_i_colamd.c umf_i_free.c \
   umf_i_fsize.c umf_i_is_permutation.c umf_i_malloc.c umf_i_realloc.c \
   umf_i_report_perm.c umf_i_singletons.c umf_di_lhsolve.c \
   umf_di_uhsolve.c umf_di_triplet_map_nox.c umf_di_triplet_nomap_x.c \
   umf_di_triplet_nomap_nox.c umf_di_triplet_map_x.c \
   umf_di_assemble_fixq.c umf_di_store_lu_drop.c umf_di_assemble.c \
   umf_di_blas3_update.c umf_di_build_tuples.c \
   umf_di_create_element.c umf_di_dump.c umf_di_extend_front.c \
   umf_di_garbage_collection.c umf_di_get_memory.c \
   umf_di_init_front.c umf_di_kernel.c umf_di_kernel_init.c \
   umf_di_kernel_wrapup.c umf_di_local_search.c umf_di_lsolve.c \
   umf_di_ltsolve.c umf_di_mem_alloc_element.c \
   umf_di_mem_alloc_head_block.c umf_di_mem_alloc_tail_block.c \
   umf_di_mem_free_tail_block.c umf_di_mem_init_memoryspace.c \
   umf_di_report_vector.c umf_di_row_search.c umf_di_scale_column.c \
   umf_di_set_stats.c umf_di_solve.c umf_di_symbolic_usage.c \
   umf_di_transpose.c umf_di_tuple_lengths.c umf_di_usolve.c \
   umf_di_utsolve.c umf_di_valid_numeric.c umf_di_valid_symbolic.c \
   umf_di_grow_front.c umf_di_start_front.c umf_di_2by2.c \
   umf_di_store_lu.c umf_di_scale.c umfpack_di_wsolve.c \
   umfpack_di_col_to_triplet.c umfpack_di_defaults.c \
   umfpack_di_free_numeric.c umfpack_di_free_symbolic.c \
   umfpack_di_get_numeric.c umfpack_di_get_lunz.c \
   umfpack_di_get_symbolic.c umfpack_di_get_determinant.c \
   umfpack_di_numeric.c \
   umfpack_di_qsymbolic.c umfpack_di_report_control.c \
   umfpack_di_report_info.c umfpack_di_report_matrix.c \
   umfpack_di_report_numeric.c umfpack_di_report_perm.c \
   umfpack_di_report_status.c umfpack_di_report_symbolic.c \
   umfpack_di_report_triplet.c umfpack_di_report_vector.c \
   umfpack_di_solve.c umfpack_di_symbolic.c umfpack_di_transpose.c \
   umfpack_di_triplet_to_col.c umfpack_di_scale.c \
   umfpack_di_load_numeric.c umfpack_di_save_numeric.c \
   umfpack_di_load_symbolic.c umfpack_di_save_symbolic.c 

UMF_L = umf_l_analyze.c umf_l_apply_order.c umf_l_colamd.c umf_l_free.c \
   umf_l_fsize.c umf_l_is_permutation.c umf_l_malloc.c umf_l_realloc.c \
   umf_l_report_perm.c umf_l_singletons.c umf_dl_lhsolve.c \
   umf_dl_uhsolve.c umf_dl_triplet_map_nox.c umf_dl_triplet_nomap_x.c \
   umf_dl_triplet_nomap_nox.c umf_dl_triplet_map_x.c \
   umf_dl_assemble_fixq.c umf_dl_store_lu_drop.c umf_dl_assemble.c \
   umf_dl_blas3_update.c umf_dl_build_tuples.c \
   umf_dl_create_element.c umf_dl_dump.c umf_dl_extend_front.c \
   umf_dl_garbage_collection.c umf_dl_get_memory.c \
   umf_dl_init_front.c umf_dl_kernel.c umf_dl_kernel_init.c \
   umf_dl_kernel_wrapup.c umf_dl_local_search.c umf_dl_lsolve.c \
   umf_dl_ltsolve.c umf_dl_mem_alloc_element.c \
   umf_dl_mem_alloc_head_block.c umf_dl_mem_alloc_tail_block.c \
   umf_dl_mem_free_tail_block.c umf_dl_mem_init_memoryspace.c \
   umf_dl_report_vector.c umf_dl_row_search.c umf_dl_scale_column.c \
   umf_dl_set_stats.c umf_dl_solve.c umf_dl_symbolic_usage.c \
   umf_dl_transpose.c umf_dl_tuple_lengths.c umf_dl_usolve.c \
   umf_dl_utsolve.c umf_dl_valid_numeric.c umf_dl_valid_symbolic.c \
   umf_dl_grow_front.c umf_dl_start_front.c umf_dl_2by2.c \
   umf_dl_store_lu.c umf_dl_scale.c umfpack_dl_wsolve.c \
   umfpack_dl_col_to_triplet.c umfpack_dl_defaults.c \
   umfpack_dl_free_numeric.c umfpack_dl_free_symbolic.c \
   umfpack_dl_get_numeric.c umfpack_dl_get_lunz.c \
   umfpack_dl_get_symbolic.c umfpack_dl_get_determinant.c \
   umfpack_dl_numeric.c umfpack_dl_qsymbolic.c umfpack_dl_report_control.c \
   umfpack_dl_report_info.c umfpack_dl_report_matrix.c \
   umfpack_dl_report_numeric.c umfpack_dl_report_perm.c \
   umfpack_dl_report_status.c umfpack_dl_report_symbolic.c \
   umfpack_dl_report_triplet.c umfpack_dl_report_vector.c \
   umfpack_dl_solve.c umfpack_dl_symbolic.c umfpack_dl_transpose.c \
   umfpack_dl_triplet_to_col.c umfpack_dl_scale.c \
   umfpack_dl_load_numeric.c umfpack_dl_save_numeric.c \
   umfpack_dl_load_symbolic.c umfpack_dl_save_symbolic.c

UMF_ZI = umf_zi_lhsolve.c umf_zi_uhsolve.c \
   umf_zi_triplet_map_nox.c umf_zi_triplet_nomap_x.c \
   umf_zi_triplet_nomap_nox.c umf_zi_triplet_map_x.c \
   umf_zi_assemble_fixq.c umf_zi_store_lu_drop.c umf_zi_assemble.c \
   umf_zi_blas3_update.c umf_zi_build_tuples.c \
   umf_zi_create_element.c umf_zi_dump.c umf_zi_extend_front.c \
   umf_zi_garbage_collection.c umf_zi_get_memory.c \
   umf_zi_init_front.c umf_zi_kernel.c umf_zi_kernel_init.c \
   umf_zi_kernel_wrapup.c umf_zi_local_search.c umf_zi_lsolve.c \
   umf_zi_ltsolve.c umf_zi_mem_alloc_element.c \
   umf_zi_mem_alloc_head_block.c umf_zi_mem_alloc_tail_block.c \
   umf_zi_mem_free_tail_block.c umf_zi_mem_init_memoryspace.c \
   umf_zi_report_vector.c umf_zi_row_search.c umf_zi_scale_column.c \
   umf_zi_set_stats.c umf_zi_solve.c umf_zi_symbolic_usage.c \
   umf_zi_transpose.c umf_zi_tuple_lengths.c umf_zi_usolve.c \
   umf_zi_utsolve.c umf_zi_valid_numeric.c umf_zi_valid_symbolic.c \
   umf_zi_grow_front.c umf_zi_start_front.c umf_zi_2by2.c \
   umf_zi_store_lu.c umf_zi_scale.c umfpack_zi_wsolve.c \
   umfpack_zi_col_to_triplet.c umfpack_zi_defaults.c \
   umfpack_zi_free_numeric.c umfpack_zi_free_symbolic.c \
   umfpack_zi_get_numeric.c umfpack_zi_get_lunz.c \
   umfpack_zi_get_symbolic.c umfpack_zi_get_determinant.c \
   umfpack_zi_numeric.c umfpack_zi_qsymbolic.c umfpack_zi_report_control.c \
   umfpack_zi_report_info.c umfpack_zi_report_matrix.c \
   umfpack_zi_report_numeric.c umfpack_zi_report_perm.c \
   umfpack_zi_report_status.c umfpack_zi_report_symbolic.c \
   umfpack_zi_report_triplet.c umfpack_zi_report_vector.c \
   umfpack_zi_solve.c umfpack_zi_symbolic.c umfpack_zi_transpose.c \
   umfpack_zi_triplet_to_col.c umfpack_zi_scale.c \
   umfpack_zi_load_numeric.c umfpack_zi_save_numeric.c \
   umfpack_zi_load_symbolic.c umfpack_zi_save_symbolic.c

UMF_ZL = umf_zl_lhsolve.c umf_zl_uhsolve.c \
   umf_zl_triplet_map_nox.c umf_zl_triplet_nomap_x.c \
   umf_zl_triplet_nomap_nox.c umf_zl_triplet_map_x.c \
   umf_zl_assemble_fixq.c umf_zl_store_lu_drop.c umf_zl_assemble.c \
   umf_zl_blas3_update.c umf_zl_build_tuples.c \
   umf_zl_create_element.c umf_zl_dump.c umf_zl_extend_front.c \
   umf_zl_garbage_collection.c umf_zl_get_memory.c \
   umf_zl_init_front.c umf_zl_kernel.c umf_zl_kernel_init.c \
   umf_zl_kernel_wrapup.c umf_zl_local_search.c umf_zl_lsolve.c \
   umf_zl_ltsolve.c umf_zl_mem_alloc_element.c \
   umf_zl_mem_alloc_head_block.c umf_zl_mem_alloc_tail_block.c \
   umf_zl_mem_free_tail_block.c umf_zl_mem_init_memoryspace.c \
   umf_zl_report_vector.c umf_zl_row_search.c umf_zl_scale_column.c \
   umf_zl_set_stats.c umf_zl_solve.c umf_zl_symbolic_usage.c \
   umf_zl_transpose.c umf_zl_tuple_lengths.c umf_zl_usolve.c \
   umf_zl_utsolve.c umf_zl_valid_numeric.c umf_zl_valid_symbolic.c \
   umf_zl_grow_front.c umf_zl_start_front.c umf_zl_2by2.c \
   umf_zl_store_lu.c umf_zl_scale.c umfpack_zl_wsolve.c \
   umfpack_zl_col_to_triplet.c umfpack_zl_defaults.c \
   umfpack_zl_free_numeric.c umfpack_zl_free_symbolic.c \
   umfpack_zl_get_numeric.c umfpack_zl_get_lunz.c \
   umfpack_zl_get_symbolic.c umfpack_zl_get_determinant.c \
   umfpack_zl_numeric.c umfpack_zl_qsymbolic.c umfpack_zl_report_control.c \
   umfpack_zl_report_info.c umfpack_zl_report_matrix.c \
   umfpack_zl_report_numeric.c umfpack_zl_report_perm.c \
   umfpack_zl_report_status.c umfpack_zl_report_symbolic.c \
   umfpack_zl_report_triplet.c umfpack_zl_report_vector.c \
   umfpack_zl_solve.c umfpack_zl_symbolic.c umfpack_zl_transpose.c \
   umfpack_zl_triplet_to_col.c umfpack_zl_scale.c \
   umfpack_zl_load_numeric.c umfpack_zl_save_numeric.c \
   umfpack_zl_load_symbolic.c umfpack_zl_save_symbolic.c

AUTOMAKE_OPTIONS = no-dependencies
SUFFIXES = .y .l .H .h .m .C .cc .c .f .java .o
always_built_SUBDIRS = 
SUBDIRS = $(always_built_SUBDIRS) .
THISLIB = umfpack
noinst_LTLIBRARIES = libumfpack.la
libumfpack_la_SOURCES = ${UMF_GN} ${UMF_I} ${UMF_ZI} ${UMF_L} ${UMF_ZL}
INCLUDES = @maloc_inc@ 
AM_CFLAGS = @profile@ @pedantic_ansi@
all: all-recursive

.SUFFIXES:
.SUFFIXES: .y .l .H .h .m .C .cc .c .f .java .o .lo .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/umfpack/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/umfpack/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libumfpack.la: $(libumfpack_la_OBJECTS) $(libumfpack_la_DEPENDENCIES) 
	$(LINK)  $(libumfpack_la_OBJECTS) $(libumfpack_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) all-local
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am all-local check check-am clean clean-generic \
	clean-libtool clean-local clean-noinstLTLIBRARIES ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am


# Preprocessing for UMFPACK Library
umfpack_gn_global.c:
	$(CPP) ${CPPINC} @srcdir@/umfpack_global.c > umfpack_gn_global.c
umfpack_gn_timer.c:
	$(CPP) ${CPPINC} @srcdir@/umfpack_timer.c > umfpack_gn_timer.c
umfpack_gn_tictoc.c:
	$(CPP) ${CPPINC} @srcdir@/umfpack_tictoc.c > umfpack_gn_tictoc.c
umf_i_analyze.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_analyze.c > umf_i_analyze.c
umf_i_apply_order.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_apply_order.c > umf_i_apply_order.c
umf_i_colamd.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_colamd.c > umf_i_colamd.c
umf_i_free.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_free.c > umf_i_free.c
umf_i_fsize.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_fsize.c > umf_i_fsize.c
umf_i_is_permutation.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_is_permutation.c > umf_i_is_permutation.c
umf_i_malloc.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_malloc.c > umf_i_malloc.c
umf_i_realloc.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_realloc.c > umf_i_realloc.c
umf_i_report_perm.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_report_perm.c > umf_i_report_perm.c
umf_i_singletons.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_singletons.c > umf_i_singletons.c
umf_l_analyze.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_analyze.c > umf_l_analyze.c
umf_l_apply_order.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_apply_order.c > umf_l_apply_order.c
umf_l_colamd.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_colamd.c > umf_l_colamd.c
umf_l_free.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_free.c > umf_l_free.c
umf_l_fsize.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_fsize.c > umf_l_fsize.c
umf_l_is_permutation.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_is_permutation.c > umf_l_is_permutation.c
umf_l_malloc.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_malloc.c > umf_l_malloc.c
umf_l_realloc.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_realloc.c > umf_l_realloc.c
umf_l_report_perm.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_report_perm.c > umf_l_report_perm.c
umf_l_singletons.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_singletons.c > umf_l_singletons.c
umf_di_lhsolve.c:
	$(CPP) ${CPPINC} -DDINT -DCONJUGATE_SOLVE @srcdir@/umf_ltsolve.c > umf_di_lhsolve.c
umf_di_uhsolve.c:
	$(CPP) ${CPPINC} -DDINT -DCONJUGATE_SOLVE @srcdir@/umf_utsolve.c > umf_di_uhsolve.c
umf_di_triplet_map_nox.c:
	$(CPP) ${CPPINC} -DDINT -DDO_MAP @srcdir@/umf_triplet.c > umf_di_triplet_map_nox.c
umf_di_triplet_nomap_x.c:
	$(CPP) ${CPPINC} -DDINT -DDO_VALUES @srcdir@/umf_triplet.c > umf_di_triplet_nomap_x.c
umf_di_triplet_nomap_nox.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_triplet.c > umf_di_triplet_nomap_nox.c
umf_di_triplet_map_x.c:
	$(CPP) ${CPPINC} -DDINT -DDO_MAP -DDO_VALUES @srcdir@/umf_triplet.c > umf_di_triplet_map_x.c
umf_di_assemble_fixq.c:
	$(CPP) ${CPPINC} -DDINT -DFIXQ @srcdir@/umf_assemble.c > umf_di_assemble_fixq.c
umf_di_store_lu_drop.c:
	$(CPP) ${CPPINC} -DDINT -DDROP @srcdir@/umf_store_lu.c > umf_di_store_lu_drop.c
umf_di_assemble.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_assemble.c > umf_di_assemble.c
umf_di_blas3_update.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_blas3_update.c > umf_di_blas3_update.c
umf_di_build_tuples.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_build_tuples.c > umf_di_build_tuples.c
umf_di_create_element.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_create_element.c > umf_di_create_element.c
umf_di_dump.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_dump.c > umf_di_dump.c
umf_di_extend_front.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_extend_front.c > umf_di_extend_front.c
umf_di_garbage_collection.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_garbage_collection.c > umf_di_garbage_collection.c
umf_di_get_memory.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_get_memory.c > umf_di_get_memory.c
umf_di_init_front.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_init_front.c > umf_di_init_front.c
umf_di_kernel.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_kernel.c > umf_di_kernel.c
umf_di_kernel_init.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_kernel_init.c > umf_di_kernel_init.c
umf_di_kernel_wrapup.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_kernel_wrapup.c > umf_di_kernel_wrapup.c
umf_di_local_search.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_local_search.c > umf_di_local_search.c
umf_di_lsolve.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_lsolve.c > umf_di_lsolve.c
umf_di_ltsolve.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_ltsolve.c > umf_di_ltsolve.c
umf_di_mem_alloc_element.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_mem_alloc_element.c > umf_di_mem_alloc_element.c
umf_di_mem_alloc_head_block.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_mem_alloc_head_block.c > umf_di_mem_alloc_head_block.c
umf_di_mem_alloc_tail_block.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_mem_alloc_tail_block.c > umf_di_mem_alloc_tail_block.c
umf_di_mem_free_tail_block.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_mem_free_tail_block.c > umf_di_mem_free_tail_block.c
umf_di_mem_init_memoryspace.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_mem_init_memoryspace.c > umf_di_mem_init_memoryspace.c
umf_di_report_vector.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_report_vector.c > umf_di_report_vector.c
umf_di_row_search.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_row_search.c > umf_di_row_search.c
umf_di_scale_column.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_scale_column.c > umf_di_scale_column.c
umf_di_set_stats.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_set_stats.c > umf_di_set_stats.c
umf_di_solve.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_solve.c > umf_di_solve.c
umf_di_symbolic_usage.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_symbolic_usage.c > umf_di_symbolic_usage.c
umf_di_transpose.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_transpose.c > umf_di_transpose.c
umf_di_tuple_lengths.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_tuple_lengths.c > umf_di_tuple_lengths.c
umf_di_usolve.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_usolve.c > umf_di_usolve.c
umf_di_utsolve.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_utsolve.c > umf_di_utsolve.c
umf_di_valid_numeric.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_valid_numeric.c > umf_di_valid_numeric.c
umf_di_valid_symbolic.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_valid_symbolic.c > umf_di_valid_symbolic.c
umf_di_grow_front.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_grow_front.c > umf_di_grow_front.c
umf_di_start_front.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_start_front.c > umf_di_start_front.c
umf_di_2by2.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_2by2.c > umf_di_2by2.c
umf_di_store_lu.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_store_lu.c > umf_di_store_lu.c
umf_di_scale.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umf_scale.c > umf_di_scale.c
umfpack_di_wsolve.c:
	$(CPP) ${CPPINC} -DDINT -DWSOLVE @srcdir@/umfpack_solve.c > umfpack_di_wsolve.c
umfpack_di_col_to_triplet.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_col_to_triplet.c > umfpack_di_col_to_triplet.c
umfpack_di_defaults.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_defaults.c > umfpack_di_defaults.c
umfpack_di_free_numeric.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_free_numeric.c > umfpack_di_free_numeric.c
umfpack_di_free_symbolic.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_free_symbolic.c > umfpack_di_free_symbolic.c
umfpack_di_get_numeric.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_get_numeric.c > umfpack_di_get_numeric.c
umfpack_di_get_lunz.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_get_lunz.c > umfpack_di_get_lunz.c
umfpack_di_get_symbolic.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_get_symbolic.c > umfpack_di_get_symbolic.c
umfpack_di_get_determinant.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_get_determinant.c > umfpack_di_get_determinant.c
umfpack_di_numeric.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_numeric.c > umfpack_di_numeric.c
umfpack_di_qsymbolic.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_qsymbolic.c > umfpack_di_qsymbolic.c
umfpack_di_report_control.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_report_control.c > umfpack_di_report_control.c
umfpack_di_report_info.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_report_info.c > umfpack_di_report_info.c
umfpack_di_report_matrix.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_report_matrix.c > umfpack_di_report_matrix.c
umfpack_di_report_numeric.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_report_numeric.c > umfpack_di_report_numeric.c
umfpack_di_report_perm.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_report_perm.c > umfpack_di_report_perm.c
umfpack_di_report_status.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_report_status.c > umfpack_di_report_status.c
umfpack_di_report_symbolic.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_report_symbolic.c > umfpack_di_report_symbolic.c
umfpack_di_report_triplet.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_report_triplet.c > umfpack_di_report_triplet.c
umfpack_di_report_vector.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_report_vector.c > umfpack_di_report_vector.c
umfpack_di_solve.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_solve.c > umfpack_di_solve.c
umfpack_di_symbolic.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_symbolic.c > umfpack_di_symbolic.c
umfpack_di_transpose.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_transpose.c > umfpack_di_transpose.c
umfpack_di_triplet_to_col.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_triplet_to_col.c > umfpack_di_triplet_to_col.c
umfpack_di_scale.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_scale.c > umfpack_di_scale.c
umfpack_di_load_numeric.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_load_numeric.c > umfpack_di_load_numeric.c
umfpack_di_save_numeric.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_save_numeric.c > umfpack_di_save_numeric.c
umfpack_di_load_symbolic.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_load_symbolic.c > umfpack_di_load_symbolic.c
umfpack_di_save_symbolic.c:
	$(CPP) ${CPPINC} -DDINT @srcdir@/umfpack_save_symbolic.c > umfpack_di_save_symbolic.c
umf_dl_lhsolve.c:
	$(CPP) ${CPPINC} -DDLONG -DCONJUGATE_SOLVE @srcdir@/umf_ltsolve.c > umf_dl_lhsolve.c
umf_dl_uhsolve.c:
	$(CPP) ${CPPINC} -DDLONG -DCONJUGATE_SOLVE @srcdir@/umf_utsolve.c > umf_dl_uhsolve.c
umf_dl_triplet_map_nox.c:
	$(CPP) ${CPPINC} -DDLONG -DDO_MAP @srcdir@/umf_triplet.c > umf_dl_triplet_map_nox.c
umf_dl_triplet_nomap_x.c:
	$(CPP) ${CPPINC} -DDLONG -DDO_VALUES @srcdir@/umf_triplet.c > umf_dl_triplet_nomap_x.c
umf_dl_triplet_nomap_nox.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_triplet.c > umf_dl_triplet_nomap_nox.c
umf_dl_triplet_map_x.c:
	$(CPP) ${CPPINC} -DDLONG -DDO_MAP -DDO_VALUES @srcdir@/umf_triplet.c > umf_dl_triplet_map_x.c
umf_dl_assemble_fixq.c:
	$(CPP) ${CPPINC} -DDLONG -DFIXQ @srcdir@/umf_assemble.c > umf_dl_assemble_fixq.c
umf_dl_store_lu_drop.c:
	$(CPP) ${CPPINC} -DDLONG -DDROP @srcdir@/umf_store_lu.c > umf_dl_store_lu_drop.c
umf_dl_assemble.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_assemble.c > umf_dl_assemble.c
umf_dl_blas3_update.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_blas3_update.c > umf_dl_blas3_update.c
umf_dl_build_tuples.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_build_tuples.c > umf_dl_build_tuples.c
umf_dl_create_element.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_create_element.c > umf_dl_create_element.c
umf_dl_dump.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_dump.c > umf_dl_dump.c
umf_dl_extend_front.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_extend_front.c > umf_dl_extend_front.c
umf_dl_garbage_collection.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_garbage_collection.c > umf_dl_garbage_collection.c
umf_dl_get_memory.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_get_memory.c > umf_dl_get_memory.c
umf_dl_init_front.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_init_front.c > umf_dl_init_front.c
umf_dl_kernel.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_kernel.c > umf_dl_kernel.c
umf_dl_kernel_init.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_kernel_init.c > umf_dl_kernel_init.c
umf_dl_kernel_wrapup.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_kernel_wrapup.c > umf_dl_kernel_wrapup.c
umf_dl_local_search.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_local_search.c > umf_dl_local_search.c
umf_dl_lsolve.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_lsolve.c > umf_dl_lsolve.c
umf_dl_ltsolve.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_ltsolve.c > umf_dl_ltsolve.c
umf_dl_mem_alloc_element.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_mem_alloc_element.c > umf_dl_mem_alloc_element.c
umf_dl_mem_alloc_head_block.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_mem_alloc_head_block.c > umf_dl_mem_alloc_head_block.c
umf_dl_mem_alloc_tail_block.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_mem_alloc_tail_block.c > umf_dl_mem_alloc_tail_block.c
umf_dl_mem_free_tail_block.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_mem_free_tail_block.c > umf_dl_mem_free_tail_block.c
umf_dl_mem_init_memoryspace.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_mem_init_memoryspace.c > umf_dl_mem_init_memoryspace.c
umf_dl_report_vector.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_report_vector.c > umf_dl_report_vector.c
umf_dl_row_search.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_row_search.c > umf_dl_row_search.c
umf_dl_scale_column.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_scale_column.c > umf_dl_scale_column.c
umf_dl_set_stats.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_set_stats.c > umf_dl_set_stats.c
umf_dl_solve.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_solve.c > umf_dl_solve.c
umf_dl_symbolic_usage.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_symbolic_usage.c > umf_dl_symbolic_usage.c
umf_dl_transpose.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_transpose.c > umf_dl_transpose.c
umf_dl_tuple_lengths.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_tuple_lengths.c > umf_dl_tuple_lengths.c
umf_dl_usolve.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_usolve.c > umf_dl_usolve.c
umf_dl_utsolve.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_utsolve.c > umf_dl_utsolve.c
umf_dl_valid_numeric.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_valid_numeric.c > umf_dl_valid_numeric.c
umf_dl_valid_symbolic.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_valid_symbolic.c > umf_dl_valid_symbolic.c
umf_dl_grow_front.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_grow_front.c > umf_dl_grow_front.c
umf_dl_start_front.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_start_front.c > umf_dl_start_front.c
umf_dl_2by2.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_2by2.c > umf_dl_2by2.c
umf_dl_store_lu.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_store_lu.c > umf_dl_store_lu.c
umf_dl_scale.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umf_scale.c > umf_dl_scale.c
umfpack_dl_wsolve.c:
	$(CPP) ${CPPINC} -DDLONG -DWSOLVE @srcdir@/umfpack_solve.c > umfpack_dl_wsolve.c
umfpack_dl_col_to_triplet.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_col_to_triplet.c > umfpack_dl_col_to_triplet.c
umfpack_dl_defaults.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_defaults.c > umfpack_dl_defaults.c
umfpack_dl_free_numeric.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_free_numeric.c > umfpack_dl_free_numeric.c
umfpack_dl_free_symbolic.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_free_symbolic.c > umfpack_dl_free_symbolic.c
umfpack_dl_get_numeric.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_get_numeric.c > umfpack_dl_get_numeric.c
umfpack_dl_get_lunz.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_get_lunz.c > umfpack_dl_get_lunz.c
umfpack_dl_get_symbolic.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_get_symbolic.c > umfpack_dl_get_symbolic.c
umfpack_dl_get_determinant.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_get_determinant.c > umfpack_dl_get_determinant.c
umfpack_dl_numeric.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_numeric.c > umfpack_dl_numeric.c
umfpack_dl_qsymbolic.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_qsymbolic.c > umfpack_dl_qsymbolic.c
umfpack_dl_report_control.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_report_control.c > umfpack_dl_report_control.c
umfpack_dl_report_info.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_report_info.c > umfpack_dl_report_info.c
umfpack_dl_report_matrix.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_report_matrix.c > umfpack_dl_report_matrix.c
umfpack_dl_report_numeric.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_report_numeric.c > umfpack_dl_report_numeric.c
umfpack_dl_report_perm.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_report_perm.c > umfpack_dl_report_perm.c
umfpack_dl_report_status.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_report_status.c > umfpack_dl_report_status.c
umfpack_dl_report_symbolic.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_report_symbolic.c > umfpack_dl_report_symbolic.c
umfpack_dl_report_triplet.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_report_triplet.c > umfpack_dl_report_triplet.c
umfpack_dl_report_vector.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_report_vector.c > umfpack_dl_report_vector.c
umfpack_dl_solve.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_solve.c > umfpack_dl_solve.c
umfpack_dl_symbolic.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_symbolic.c > umfpack_dl_symbolic.c
umfpack_dl_transpose.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_transpose.c > umfpack_dl_transpose.c
umfpack_dl_triplet_to_col.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_triplet_to_col.c > umfpack_dl_triplet_to_col.c
umfpack_dl_scale.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_scale.c > umfpack_dl_scale.c
umfpack_dl_load_numeric.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_load_numeric.c > umfpack_dl_load_numeric.c
umfpack_dl_save_numeric.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_save_numeric.c > umfpack_dl_save_numeric.c
umfpack_dl_load_symbolic.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_load_symbolic.c > umfpack_dl_load_symbolic.c
umfpack_dl_save_symbolic.c:
	$(CPP) ${CPPINC} -DDLONG @srcdir@/umfpack_save_symbolic.c > umfpack_dl_save_symbolic.c
umf_zi_lhsolve.c:
	$(CPP) ${CPPINC} -DZINT -DCONJUGATE_SOLVE @srcdir@/umf_ltsolve.c > umf_zi_lhsolve.c
umf_zi_uhsolve.c:
	$(CPP) ${CPPINC} -DZINT -DCONJUGATE_SOLVE @srcdir@/umf_utsolve.c > umf_zi_uhsolve.c
umf_zi_triplet_map_nox.c:
	$(CPP) ${CPPINC} -DZINT -DDO_MAP @srcdir@/umf_triplet.c > umf_zi_triplet_map_nox.c
umf_zi_triplet_nomap_x.c:
	$(CPP) ${CPPINC} -DZINT -DDO_VALUES @srcdir@/umf_triplet.c > umf_zi_triplet_nomap_x.c
umf_zi_triplet_nomap_nox.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_triplet.c > umf_zi_triplet_nomap_nox.c
umf_zi_triplet_map_x.c:
	$(CPP) ${CPPINC} -DZINT -DDO_MAP -DDO_VALUES @srcdir@/umf_triplet.c > umf_zi_triplet_map_x.c
umf_zi_assemble_fixq.c:
	$(CPP) ${CPPINC} -DZINT -DFIXQ @srcdir@/umf_assemble.c > umf_zi_assemble_fixq.c
umf_zi_store_lu_drop.c:
	$(CPP) ${CPPINC} -DZINT -DDROP @srcdir@/umf_store_lu.c > umf_zi_store_lu_drop.c
umf_zi_assemble.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_assemble.c > umf_zi_assemble.c
umf_zi_blas3_update.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_blas3_update.c > umf_zi_blas3_update.c
umf_zi_build_tuples.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_build_tuples.c > umf_zi_build_tuples.c
umf_zi_create_element.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_create_element.c > umf_zi_create_element.c
umf_zi_dump.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_dump.c > umf_zi_dump.c
umf_zi_extend_front.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_extend_front.c > umf_zi_extend_front.c
umf_zi_garbage_collection.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_garbage_collection.c > umf_zi_garbage_collection.c
umf_zi_get_memory.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_get_memory.c > umf_zi_get_memory.c
umf_zi_init_front.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_init_front.c > umf_zi_init_front.c
umf_zi_kernel.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_kernel.c > umf_zi_kernel.c
umf_zi_kernel_init.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_kernel_init.c > umf_zi_kernel_init.c
umf_zi_kernel_wrapup.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_kernel_wrapup.c > umf_zi_kernel_wrapup.c
umf_zi_local_search.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_local_search.c > umf_zi_local_search.c
umf_zi_lsolve.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_lsolve.c > umf_zi_lsolve.c
umf_zi_ltsolve.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_ltsolve.c > umf_zi_ltsolve.c
umf_zi_mem_alloc_element.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_mem_alloc_element.c > umf_zi_mem_alloc_element.c
umf_zi_mem_alloc_head_block.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_mem_alloc_head_block.c > umf_zi_mem_alloc_head_block.c
umf_zi_mem_alloc_tail_block.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_mem_alloc_tail_block.c > umf_zi_mem_alloc_tail_block.c
umf_zi_mem_free_tail_block.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_mem_free_tail_block.c > umf_zi_mem_free_tail_block.c
umf_zi_mem_init_memoryspace.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_mem_init_memoryspace.c > umf_zi_mem_init_memoryspace.c
umf_zi_report_vector.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_report_vector.c > umf_zi_report_vector.c
umf_zi_row_search.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_row_search.c > umf_zi_row_search.c
umf_zi_scale_column.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_scale_column.c > umf_zi_scale_column.c
umf_zi_set_stats.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_set_stats.c > umf_zi_set_stats.c
umf_zi_solve.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_solve.c > umf_zi_solve.c
umf_zi_symbolic_usage.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_symbolic_usage.c > umf_zi_symbolic_usage.c
umf_zi_transpose.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_transpose.c > umf_zi_transpose.c
umf_zi_tuple_lengths.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_tuple_lengths.c > umf_zi_tuple_lengths.c
umf_zi_usolve.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_usolve.c > umf_zi_usolve.c
umf_zi_utsolve.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_utsolve.c > umf_zi_utsolve.c
umf_zi_valid_numeric.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_valid_numeric.c > umf_zi_valid_numeric.c
umf_zi_valid_symbolic.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_valid_symbolic.c > umf_zi_valid_symbolic.c
umf_zi_grow_front.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_grow_front.c > umf_zi_grow_front.c
umf_zi_start_front.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_start_front.c > umf_zi_start_front.c
umf_zi_2by2.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_2by2.c > umf_zi_2by2.c
umf_zi_store_lu.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_store_lu.c > umf_zi_store_lu.c
umf_zi_scale.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umf_scale.c > umf_zi_scale.c
umfpack_zi_wsolve.c:
	$(CPP) ${CPPINC} -DZINT -DWSOLVE @srcdir@/umfpack_solve.c > umfpack_zi_wsolve.c
umfpack_zi_col_to_triplet.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_col_to_triplet.c > umfpack_zi_col_to_triplet.c
umfpack_zi_defaults.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_defaults.c > umfpack_zi_defaults.c
umfpack_zi_free_numeric.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_free_numeric.c > umfpack_zi_free_numeric.c
umfpack_zi_free_symbolic.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_free_symbolic.c > umfpack_zi_free_symbolic.c
umfpack_zi_get_numeric.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_get_numeric.c > umfpack_zi_get_numeric.c
umfpack_zi_get_lunz.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_get_lunz.c > umfpack_zi_get_lunz.c
umfpack_zi_get_symbolic.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_get_symbolic.c > umfpack_zi_get_symbolic.c
umfpack_zi_get_determinant.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_get_determinant.c > umfpack_zi_get_determinant.c
umfpack_zi_numeric.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_numeric.c > umfpack_zi_numeric.c
umfpack_zi_qsymbolic.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_qsymbolic.c > umfpack_zi_qsymbolic.c
umfpack_zi_report_control.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_report_control.c > umfpack_zi_report_control.c
umfpack_zi_report_info.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_report_info.c > umfpack_zi_report_info.c
umfpack_zi_report_matrix.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_report_matrix.c > umfpack_zi_report_matrix.c
umfpack_zi_report_numeric.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_report_numeric.c > umfpack_zi_report_numeric.c
umfpack_zi_report_perm.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_report_perm.c > umfpack_zi_report_perm.c
umfpack_zi_report_status.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_report_status.c > umfpack_zi_report_status.c
umfpack_zi_report_symbolic.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_report_symbolic.c > umfpack_zi_report_symbolic.c
umfpack_zi_report_triplet.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_report_triplet.c > umfpack_zi_report_triplet.c
umfpack_zi_report_vector.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_report_vector.c > umfpack_zi_report_vector.c
umfpack_zi_solve.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_solve.c > umfpack_zi_solve.c
umfpack_zi_symbolic.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_symbolic.c > umfpack_zi_symbolic.c
umfpack_zi_transpose.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_transpose.c > umfpack_zi_transpose.c
umfpack_zi_triplet_to_col.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_triplet_to_col.c > umfpack_zi_triplet_to_col.c
umfpack_zi_scale.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_scale.c > umfpack_zi_scale.c
umfpack_zi_load_numeric.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_load_numeric.c > umfpack_zi_load_numeric.c
umfpack_zi_save_numeric.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_save_numeric.c > umfpack_zi_save_numeric.c
umfpack_zi_load_symbolic.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_load_symbolic.c > umfpack_zi_load_symbolic.c
umfpack_zi_save_symbolic.c:
	$(CPP) ${CPPINC} -DZINT @srcdir@/umfpack_save_symbolic.c > umfpack_zi_save_symbolic.c
umf_zl_lhsolve.c:
	$(CPP) ${CPPINC} -DZLONG -DCONJUGATE_SOLVE @srcdir@/umf_ltsolve.c > umf_zl_lhsolve.c
umf_zl_uhsolve.c:
	$(CPP) ${CPPINC} -DZLONG -DCONJUGATE_SOLVE @srcdir@/umf_utsolve.c > umf_zl_uhsolve.c
umf_zl_triplet_map_nox.c:
	$(CPP) ${CPPINC} -DZLONG -DDO_MAP @srcdir@/umf_triplet.c > umf_zl_triplet_map_nox.c
umf_zl_triplet_nomap_x.c:
	$(CPP) ${CPPINC} -DZLONG -DDO_VALUES @srcdir@/umf_triplet.c > umf_zl_triplet_nomap_x.c
umf_zl_triplet_nomap_nox.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_triplet.c > umf_zl_triplet_nomap_nox.c
umf_zl_triplet_map_x.c:
	$(CPP) ${CPPINC} -DZLONG -DDO_MAP -DDO_VALUES @srcdir@/umf_triplet.c > umf_zl_triplet_map_x.c
umf_zl_assemble_fixq.c:
	$(CPP) ${CPPINC} -DZLONG -DFIXQ @srcdir@/umf_assemble.c > umf_zl_assemble_fixq.c
umf_zl_store_lu_drop.c:
	$(CPP) ${CPPINC} -DZLONG -DDROP @srcdir@/umf_store_lu.c > umf_zl_store_lu_drop.c
umf_zl_assemble.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_assemble.c > umf_zl_assemble.c
umf_zl_blas3_update.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_blas3_update.c > umf_zl_blas3_update.c
umf_zl_build_tuples.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_build_tuples.c > umf_zl_build_tuples.c
umf_zl_create_element.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_create_element.c > umf_zl_create_element.c
umf_zl_dump.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_dump.c > umf_zl_dump.c
umf_zl_extend_front.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_extend_front.c > umf_zl_extend_front.c
umf_zl_garbage_collection.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_garbage_collection.c > umf_zl_garbage_collection.c
umf_zl_get_memory.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_get_memory.c > umf_zl_get_memory.c
umf_zl_init_front.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_init_front.c > umf_zl_init_front.c
umf_zl_kernel.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_kernel.c > umf_zl_kernel.c
umf_zl_kernel_init.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_kernel_init.c > umf_zl_kernel_init.c
umf_zl_kernel_wrapup.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_kernel_wrapup.c > umf_zl_kernel_wrapup.c
umf_zl_local_search.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_local_search.c > umf_zl_local_search.c
umf_zl_lsolve.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_lsolve.c > umf_zl_lsolve.c
umf_zl_ltsolve.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_ltsolve.c > umf_zl_ltsolve.c
umf_zl_mem_alloc_element.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_mem_alloc_element.c > umf_zl_mem_alloc_element.c
umf_zl_mem_alloc_head_block.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_mem_alloc_head_block.c > umf_zl_mem_alloc_head_block.c
umf_zl_mem_alloc_tail_block.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_mem_alloc_tail_block.c > umf_zl_mem_alloc_tail_block.c
umf_zl_mem_free_tail_block.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_mem_free_tail_block.c > umf_zl_mem_free_tail_block.c
umf_zl_mem_init_memoryspace.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_mem_init_memoryspace.c > umf_zl_mem_init_memoryspace.c
umf_zl_report_vector.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_report_vector.c > umf_zl_report_vector.c
umf_zl_row_search.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_row_search.c > umf_zl_row_search.c
umf_zl_scale_column.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_scale_column.c > umf_zl_scale_column.c
umf_zl_set_stats.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_set_stats.c > umf_zl_set_stats.c
umf_zl_solve.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_solve.c > umf_zl_solve.c
umf_zl_symbolic_usage.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_symbolic_usage.c > umf_zl_symbolic_usage.c
umf_zl_transpose.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_transpose.c > umf_zl_transpose.c
umf_zl_tuple_lengths.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_tuple_lengths.c > umf_zl_tuple_lengths.c
umf_zl_usolve.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_usolve.c > umf_zl_usolve.c
umf_zl_utsolve.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_utsolve.c > umf_zl_utsolve.c
umf_zl_valid_numeric.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_valid_numeric.c > umf_zl_valid_numeric.c
umf_zl_valid_symbolic.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_valid_symbolic.c > umf_zl_valid_symbolic.c
umf_zl_grow_front.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_grow_front.c > umf_zl_grow_front.c
umf_zl_start_front.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_start_front.c > umf_zl_start_front.c
umf_zl_2by2.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_2by2.c > umf_zl_2by2.c
umf_zl_store_lu.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_store_lu.c > umf_zl_store_lu.c
umf_zl_scale.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umf_scale.c > umf_zl_scale.c
umfpack_zl_wsolve.c:
	$(CPP) ${CPPINC} -DZLONG -DWSOLVE @srcdir@/umfpack_solve.c > umfpack_zl_wsolve.c
umfpack_zl_col_to_triplet.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_col_to_triplet.c > umfpack_zl_col_to_triplet.c
umfpack_zl_defaults.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_defaults.c > umfpack_zl_defaults.c
umfpack_zl_free_numeric.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_free_numeric.c > umfpack_zl_free_numeric.c
umfpack_zl_free_symbolic.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_free_symbolic.c > umfpack_zl_free_symbolic.c
umfpack_zl_get_numeric.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_get_numeric.c > umfpack_zl_get_numeric.c
umfpack_zl_get_lunz.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_get_lunz.c > umfpack_zl_get_lunz.c
umfpack_zl_get_symbolic.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_get_symbolic.c > umfpack_zl_get_symbolic.c
umfpack_zl_get_determinant.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_get_determinant.c > umfpack_zl_get_determinant.c
umfpack_zl_numeric.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_numeric.c > umfpack_zl_numeric.c
umfpack_zl_qsymbolic.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_qsymbolic.c > umfpack_zl_qsymbolic.c
umfpack_zl_report_control.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_report_control.c > umfpack_zl_report_control.c
umfpack_zl_report_info.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_report_info.c > umfpack_zl_report_info.c
umfpack_zl_report_matrix.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_report_matrix.c > umfpack_zl_report_matrix.c
umfpack_zl_report_numeric.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_report_numeric.c > umfpack_zl_report_numeric.c
umfpack_zl_report_perm.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_report_perm.c > umfpack_zl_report_perm.c
umfpack_zl_report_status.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_report_status.c > umfpack_zl_report_status.c
umfpack_zl_report_symbolic.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_report_symbolic.c > umfpack_zl_report_symbolic.c
umfpack_zl_report_triplet.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_report_triplet.c > umfpack_zl_report_triplet.c
umfpack_zl_report_vector.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_report_vector.c > umfpack_zl_report_vector.c
umfpack_zl_solve.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_solve.c > umfpack_zl_solve.c
umfpack_zl_symbolic.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_symbolic.c > umfpack_zl_symbolic.c
umfpack_zl_transpose.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_transpose.c > umfpack_zl_transpose.c
umfpack_zl_triplet_to_col.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_triplet_to_col.c > umfpack_zl_triplet_to_col.c
umfpack_zl_scale.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_scale.c > umfpack_zl_scale.c
umfpack_zl_load_numeric.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_load_numeric.c > umfpack_zl_load_numeric.c
umfpack_zl_save_numeric.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_save_numeric.c > umfpack_zl_save_numeric.c
umfpack_zl_load_symbolic.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_load_symbolic.c > umfpack_zl_load_symbolic.c
umfpack_zl_save_symbolic.c:
	$(CPP) ${CPPINC} -DZLONG @srcdir@/umfpack_save_symbolic.c > umfpack_zl_save_symbolic.c

all-local:
	-cp -p ${top_srcdir}/src/${THISLIB}/punc/*.h ../aaa_inc/punc/.

clean-local:
	-rm -f ${UMF_GN} ${UMF_I} ${UMF_ZI} ${UMF_L} ${UMF_ZL}

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
